<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- 1. DataSource 설정추가하고 JUnit 연결 테스트하기 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property> -->
		<!-- <property name="url" value="jdbc:log4jdbc:oracle:thin:@127.0.0.1:1521:xe"></property> -->
		<!-- <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"></property> 
		<property name="username" value="hr"></property>
		<property name="password" value="1111"></property> -->
<!-- 		         <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/database_development?useUnicode=true&amp;characterEncoding=utf8"></property>  -->
		 <property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
   		<property name="url" value="jdbc:log4jdbc:mysql://127.0.0.1:3306/spring?characterEncoding=utf8&amp;serverTimezone=UTC&amp;useSSL=false" />
        <property name="username" value="root"></property>
        <property name="password" value="won1228"></property>
	</bean>
	
	<!-- 2. MyBatis 연동을 위한 추가 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 3. resource에 mybatis-config.xml 만들고 추가하기 -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        
        <!-- 4. resource에 mappers 디렉토리를 만들고 추가하기 mybatis dqm -->
        <property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" />
    </bean>
    
    <!-- 6. @repository 에서 의존성 주입을 위한 설정 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>	
	
	<!-- @Aspect , @Before , @After -->
	<aop:aspectj-autoproxy />
	<context:component-scan base-package="com.spring.study.**" />
	
	<!-- aop configuration -->
	<!-- 
	<bean id="target" class="com.spring.study.aop.service.AopCoreImpl" />
	
	<aop:config>
		<aop:pointcut 
			expression="execution(public * com.spring.acorn..*Impl.e*(..))" 
			id="beforeMethod"/>
		
		<aop:aspect	ref="before">
			<aop:before method="before" pointcut-ref="beforeMethod"/>
		</aop:aspect>
		<aop:aspect	ref="after">
			<aop:after method="after"  pointcut-ref="beforeMethod"/>
		</aop:aspect>
		
	</aop:config>
	
	<bean id="before" class="com.spring.acorn.aop.aspect.BeforeAspect" />
	<bean id="after" class="com.spring.acorn.aop.aspect.AfterAspect" />
	-->
	
</beans>

